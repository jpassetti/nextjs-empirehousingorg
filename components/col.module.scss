@use '../styles/abstracts/mixins';

$sizes: xs, sm, md, lg;
$alignments: left, right, center;

.col {
	width: 100%;
	padding: 0 .5rem;
	//background-color: orange;
	//margin-bottom: 1rem;
	position: relative;
	@each $size in $sizes {
		@include mixins.breakpoint(#{$size}) {
			@for $i from 1 through 12 {
				&.col-#{$size}-#{$i} {
					width: calc(100% * (#{$i}/12));
				}
			}
		}
	} // for each loop end
	&.white {
		color: #ffffff;
	}
	@include mixins.marginAndPadding()
}
.flex-direction-column {
	display: flex;
	flex-direction: column;
}
.flex-direction-column-reverse {
	display: flex;
	flex-direction: column-reverse;
}
.flex-direction-row {
	display: flex;
	flex-direction: row;
}
.align-items-flex-start {
	display: flex;
	align-items: flex-start;
}
.align-items-center {
	display: flex;
	align-items: center;
}
.align-items-flex-end {
	display: flex;
	align-items: flex-end;
}
.justify-content-flex-start {
	display: flex;
	justify-content: flex-start;
}
.justify-content-space-between {
	display: flex;
	justify-content: space-between;
}
.justify-content-center {
	display: flex;
	justify-content: center;
}
.justify-content-flex-end {
	display: flex;
	justify-content: flex-end;
}
.text-align-left {
	text-align: left;
}
.text-align-right {
	text-align: right;
}
.text-align-center {
	text-align: center;
}
.sticky {
	// no sticky on mobile
	@include mixins.breakpoint(md) {
		position: sticky;
		top: 0;
	}
}
.border-left {
	border-left: 1px solid white;
}
.bgColor-white {
	background-color: #fff;
}


@each $size in $sizes {
	@include mixins.breakpoint(#{$size}) {
		@each $alignment in $alignments {
			.#{$size}-text-align-#{$alignment} {
				text-align: $alignment;
			}
		}
	}
} // for each loop end

.badge-grid-item {
	background-color: red;
	@for $i from 1 through 20 {
		&:nth-child(4n+3) {
			background-color: yellow;
			transform: translate(25%, -25%);
		}
		&:nth-child(4n+4) {
			background-color: yellow;
			transform: translate(25%, -25%);
		}
	} // for loop end
	
	@include mixins.breakpoint(sm) {

	} // sm
	@include mixins.breakpoint(md) {

	} // md
	@include mixins.breakpoint(lg) {

	} // lg
}
